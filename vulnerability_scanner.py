import requests
import re

def check_sql_injection(url):
    payloads = ["'", "\"", "--", "/*", "*/", " OR 1=1"]
    vulnerable = False

    for payload in payloads:
        r = requests.get(url + payload)
        if "syntax error" in r.text.lower() or "mysql" in r.text.lower() or "sql" in r.text.lower():
            vulnerable = True
            break

    return vulnerable

def check_xss(url):
    payloads = ["<script>alert('XSS')</script>", "<img src=x onerror=alert('XSS')>"]
    vulnerable = False

    for payload in payloads:
        r = requests.get(url, params={"q": payload})
        if payload in r.text:
            vulnerable = True
            break

    return vulnerable

def port_scan(target, ports):
    import socket
    open_ports = []

    for port in ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((target, port))
        if result == 0:
            open_ports.append(port)
        sock.close()

    return open_ports

def main():
    url = input("Enter the URL to scan for vulnerabilities (e.g., http://example.com/page?param=): ")
    target = input("Enter the target IP address for port scanning: ")
    ports = [21, 22, 23, 25, 80, 443, 3306, 8080]  # Common ports to scan

    print("\n[+] Checking for SQL Injection vulnerabilities...")
    if check_sql_injection(url):
        print("[-] The website is vulnerable to SQL Injection.")
    else:
        print("[+] The website is not vulnerable to SQL Injection.")

    print("\n[+] Checking for XSS vulnerabilities...")
    if check_xss(url):
        print("[-] The website is vulnerable to XSS.")
    else:
        print("[+] The website is not vulnerable to XSS.")

    print("\n[+] Scanning for open ports...")
    open_ports = port_scan(target, ports)
    if open_ports:
        print(f"[-] Open ports found: {open_ports}")
    else:
        print("[+] No open ports found.")

if __name__ == "__main__":
    main()
